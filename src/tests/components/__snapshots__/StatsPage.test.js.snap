// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render stats page with profile data 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <StaticRouter>
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
      staticContext={Object {}}
    >
      <Connect(StatsPage)>
        <StatsPage
          abilities={
            Object {
              "cha": Object {
                "mod": 0,
                "score": 11,
              },
              "con": Object {
                "mod": 3,
                "score": 16,
              },
              "dex": Object {
                "mod": 2,
                "score": 18,
              },
              "int": Object {
                "mod": 5,
                "score": 20,
              },
              "str": Object {
                "mod": 2,
                "score": 14,
              },
              "wis": Object {
                "mod": 2,
                "score": 14,
              },
            }
          }
          hitDie="D4"
          id="recnPKEA6sOWaOt57"
          level={5}
          nextLevelXp={15000}
          skillSet={
            Array [
              Object {
                "id": "recfbplSsRmzNs68J",
                "ranks": 4,
              },
              Object {
                "id": "recoJ7dkAWtHAkj3v",
                "ranks": 3,
              },
              Object {
                "id": "recHCeKVn3CB0HcNA",
                "ranks": 5,
              },
              Object {
                "id": "recs2EXcqiCIfwO0w",
                "ranks": 9,
              },
            ]
          }
          startEditProfile={[Function]}
          xp={10000}
        >
          <div
            className="layout"
          >
            <Connect(Header)
              pageTitle="Character Stats"
            >
              <Header
                hasProfiles={false}
                pageTitle="Character Stats"
                startLogout={[Function]}
              >
                <header>
                  <div
                    className="container header__content"
                  >
                    <h2
                      className="header__title"
                    >
                      Character Stats
                    </h2>
                    <div
                      className="header__nav"
                    >
                      <NavLink
                        className="header__icon"
                        to="/create"
                      >
                        <Route
                          path="\\\\/create"
                        >
                          <Link
                            aria-current={null}
                            className="header__icon"
                            to="/create"
                          >
                            <a
                              aria-current={null}
                              className="header__icon"
                              href="/create"
                              onClick={[Function]}
                            >
                              <HeaderIcon
                                svgFile="test-file-stub"
                              >
                                <SVGInline
                                  classSuffix="-svg"
                                  cleanup={true}
                                  cleanupExceptions={Array []}
                                  component="span"
                                  fill="white"
                                  height="100%"
                                  svg="test-file-stub"
                                  width="100%"
                                >
                                  <span
                                    className="SVGInline SVGInline--cleaned"
                                    dangerouslySetInnerHTML={
                                      Object {
                                        "__html": "test-file-stub",
                                      }
                                    }
                                  />
                                </SVGInline>
                              </HeaderIcon>
                            </a>
                          </Link>
                        </Route>
                      </NavLink>
                      <NavLink
                        className="header__icon"
                        hidden={true}
                        to="/select"
                      >
                        <Route
                          path="\\\\/select"
                        >
                          <Link
                            aria-current={null}
                            className="header__icon"
                            hidden={true}
                            to="/select"
                          >
                            <a
                              aria-current={null}
                              className="header__icon"
                              hidden={true}
                              href="/select"
                              onClick={[Function]}
                            >
                              <HeaderIcon
                                svgFile="test-file-stub"
                              >
                                <SVGInline
                                  classSuffix="-svg"
                                  cleanup={true}
                                  cleanupExceptions={Array []}
                                  component="span"
                                  fill="white"
                                  height="100%"
                                  svg="test-file-stub"
                                  width="100%"
                                >
                                  <span
                                    className="SVGInline SVGInline--cleaned"
                                    dangerouslySetInnerHTML={
                                      Object {
                                        "__html": "test-file-stub",
                                      }
                                    }
                                  />
                                </SVGInline>
                              </HeaderIcon>
                            </a>
                          </Link>
                        </Route>
                      </NavLink>
                      <button
                        onClick={[Function]}
                      >
                        Logout
                      </button>
                    </div>
                  </div>
                </header>
              </Header>
            </Connect(Header)>
            <div
              className="container container--body"
            >
              <div
                className="row"
              >
                <h3>
                  Level 
                  5
                </h3>
                <span>
                  XP: 
                  10000
                </span>
              </div>
              <div
                className="row"
              >
                <span>
                  Hit Die: 
                  D4
                </span>
                <span>
                  To next level: 
                  5000
                </span>
              </div>
              <Abilities
                abilities={
                  Object {
                    "cha": Object {
                      "mod": 0,
                      "score": 11,
                    },
                    "con": Object {
                      "mod": 3,
                      "score": 16,
                    },
                    "dex": Object {
                      "mod": 2,
                      "score": 18,
                    },
                    "int": Object {
                      "mod": 5,
                      "score": 20,
                    },
                    "str": Object {
                      "mod": 2,
                      "score": 14,
                    },
                    "wis": Object {
                      "mod": 2,
                      "score": 14,
                    },
                  }
                }
                handleChange={[Function]}
              >
                <div
                  className="grid grid--abilities"
                >
                  <h5
                    className="grid__col1"
                  >
                    Ability
                  </h5>
                  <div
                    className="grid__col1"
                    key="ability0"
                  >
                    STR
                  </div>
                  <div
                    className="grid__col1"
                    key="ability1"
                  >
                    DEX
                  </div>
                  <div
                    className="grid__col1"
                    key="ability2"
                  >
                    CON
                  </div>
                  <div
                    className="grid__col1"
                    key="ability3"
                  >
                    INT
                  </div>
                  <div
                    className="grid__col1"
                    key="ability4"
                  >
                    WIS
                  </div>
                  <div
                    className="grid__col1"
                    key="ability5"
                  >
                    CHA
                  </div>
                  <h5
                    className="grid__col2"
                  >
                    Score
                  </h5>
                  <div
                    className="grid__col2"
                    key="score0"
                  >
                    14
                  </div>
                  <div
                    className="grid__col2"
                    key="score1"
                  >
                    18
                  </div>
                  <div
                    className="grid__col2"
                    key="score2"
                  >
                    16
                  </div>
                  <div
                    className="grid__col2"
                    key="score3"
                  >
                    20
                  </div>
                  <div
                    className="grid__col2"
                    key="score4"
                  >
                    14
                  </div>
                  <div
                    className="grid__col2"
                    key="score5"
                  >
                    11
                  </div>
                  <h5
                    className="grid__col3"
                  >
                    Mod
                  </h5>
                  <div
                    className="grid__col3"
                    key="mod0"
                  >
                    2
                  </div>
                  <div
                    className="grid__col3"
                    key="mod1"
                  >
                    2
                  </div>
                  <div
                    className="grid__col3"
                    key="mod2"
                  >
                    3
                  </div>
                  <div
                    className="grid__col3"
                    key="mod3"
                  >
                    5
                  </div>
                  <div
                    className="grid__col3"
                    key="mod4"
                  >
                    2
                  </div>
                  <div
                    className="grid__col3"
                    key="mod5"
                  >
                    0
                  </div>
                  <h5
                    className="grid__col4"
                  >
                    Temp Score
                  </h5>
                  <input
                    className="grid__col4"
                    id="str"
                    key="tempScore0"
                    name="abilities"
                    onChange={[Function]}
                    type="text"
                  />
                  <input
                    className="grid__col4"
                    id="dex"
                    key="tempScore1"
                    name="abilities"
                    onChange={[Function]}
                    type="text"
                  />
                  <input
                    className="grid__col4"
                    id="con"
                    key="tempScore2"
                    name="abilities"
                    onChange={[Function]}
                    type="text"
                  />
                  <input
                    className="grid__col4"
                    id="int"
                    key="tempScore3"
                    name="abilities"
                    onChange={[Function]}
                    type="text"
                  />
                  <input
                    className="grid__col4"
                    id="wis"
                    key="tempScore4"
                    name="abilities"
                    onChange={[Function]}
                    type="text"
                  />
                  <input
                    className="grid__col4"
                    id="cha"
                    key="tempScore5"
                    name="abilities"
                    onChange={[Function]}
                    type="text"
                  />
                  <h5
                    className="grid__col5"
                  >
                    Temp Mod
                  </h5>
                  <div
                    className="grid__col5"
                    key="tempMod0"
                  />
                  <div
                    className="grid__col5"
                    key="tempMod1"
                  />
                  <div
                    className="grid__col5"
                    key="tempMod2"
                  />
                  <div
                    className="grid__col5"
                    key="tempMod3"
                  />
                  <div
                    className="grid__col5"
                    key="tempMod4"
                  />
                  <div
                    className="grid__col5"
                    key="tempMod5"
                  />
                </div>
              </Abilities>
              <Connect(SkillSet)
                skillSet={
                  Array [
                    Object {
                      "id": "recfbplSsRmzNs68J",
                      "ranks": 4,
                    },
                    Object {
                      "id": "recoJ7dkAWtHAkj3v",
                      "ranks": 3,
                    },
                    Object {
                      "id": "recHCeKVn3CB0HcNA",
                      "ranks": 5,
                    },
                    Object {
                      "id": "recs2EXcqiCIfwO0w",
                      "ranks": 9,
                    },
                  ]
                }
              >
                <SkillSet
                  dispatch={[Function]}
                  skillSet={
                    Array [
                      Object {
                        "id": "recfbplSsRmzNs68J",
                        "ranks": 4,
                      },
                      Object {
                        "id": "recoJ7dkAWtHAkj3v",
                        "ranks": 3,
                      },
                      Object {
                        "id": "recHCeKVn3CB0HcNA",
                        "ranks": 5,
                      },
                      Object {
                        "id": "recs2EXcqiCIfwO0w",
                        "ranks": 9,
                      },
                    ]
                  }
                  skills={
                    Object {
                      "rec0OGasNQdFrl2oJ": Object {
                        "description": "You possess knowledge of local customs and events. ",
                        "keyAbility": "INT",
                        "name": "Knowledge (Local)",
                        "notes": "",
                      },
                      "rec1xorrcc2QO41Pt": Object {
                        "description": "A successful Swim check allows you to swim a certain distance.",
                        "keyAbility": "STR",
                        "name": "Swim",
                        "notes": "Armor check penalty, if any, applies.",
                      },
                      "rec4IPv9393lPD698": Object {
                        "description": "You are trained in the art of alchemy.",
                        "keyAbility": "INT",
                        "name": "Craft (Alchemy)",
                        "notes": "",
                      },
                      "rec4ebDaqFUCuHtqf": Object {
                        "description": "You possess knowledge of noble families and royalty. ",
                        "keyAbility": "INT",
                        "name": "Knowledge (Nobility & Royalty)",
                        "notes": "",
                      },
                      "rec4pj2E8b0WjzNqv": Object {
                        "description": "Use this skill to make contacts, learn local gossip, and collect general information.",
                        "keyAbility": "CHA",
                        "name": "Gather Information",
                        "notes": "",
                      },
                      "rec5I8HeM6Vdy5bF9": Object {
                        "description": "Hear approaching enemies, someone sneaking up on you, or eavesdrop on a conversation.",
                        "keyAbility": "WIS",
                        "name": "Listen",
                        "notes": "",
                      },
                      "rec6EwJV9flyKoo38": Object {
                        "description": "You can activate magic devices, including scrolls and wands, which otherwise you could not.",
                        "keyAbility": "CHA",
                        "name": "Use Magic Device",
                        "notes": "",
                      },
                      "rec6cwGfbfYKsMgu9": Object {
                        "description": "You are trained in the art of trapmaking.",
                        "keyAbility": "INT",
                        "name": "Craft (Trapmaking)",
                        "notes": "",
                      },
                      "rec6d9ZVTzuYL8A1v": Object {
                        "description": "You are skilled in an artistic form and able to impress audiences.",
                        "keyAbility": "CHA",
                        "name": "Perform",
                        "notes": "",
                      },
                      "rec7AWu5YzehcVUDy": Object {
                        "description": "Learn to speak, read and write a new language. Max rank is one.",
                        "keyAbility": "INT",
                        "name": "Speak Language",
                        "notes": "",
                      },
                      "recAx3jxVlgcZKNMl": Object {
                        "description": "You are trained in the art of basketweaving.",
                        "keyAbility": "INT",
                        "name": "Craft (Basketweaving)",
                        "notes": "",
                      },
                      "recB7HmaysbQ5AB7W": Object {
                        "description": "You are trained in the art of stonemasonry.",
                        "keyAbility": "INT",
                        "name": "Craft (Stonemasonry)",
                        "notes": "",
                      },
                      "recBo1qOJpRIzQI23": Object {
                        "description": "You are trained in the art of sculpting.",
                        "keyAbility": "INT",
                        "name": "Craft (Sculpting)",
                        "notes": "",
                      },
                      "recCZ9DEKgfsXycmy": Object {
                        "description": "Use this skill to change your appearance or someone else\`s.",
                        "keyAbility": "CHA",
                        "name": "Disguise",
                        "notes": "",
                      },
                      "recEAKUUXhr4U1nO2": Object {
                        "description": "You are trained in the art of cartography.",
                        "keyAbility": "INT",
                        "name": "Craft (Cartography)",
                        "notes": "",
                      },
                      "recEmYhYo6I2y9gif": Object {
                        "description": "You are trained in the art of armorsmithing.",
                        "keyAbility": "INT",
                        "name": "Craft (Armorsmithing)",
                        "notes": "",
                      },
                      "recF1EBT1t1HZ5hWA": Object {
                        "description": "Pick padlocks, finesse combination locks, and solve puzzle locks.",
                        "keyAbility": "DEX",
                        "name": "Open Lock",
                        "notes": "",
                      },
                      "recG2T5BZ4S6IDdl5": Object {
                        "description": "You are trained in the art of poisonmaking.",
                        "keyAbility": "INT",
                        "name": "Craft (Poisonmaking)",
                        "notes": "",
                      },
                      "recGi6UgdF7MoNCkp": Object {
                        "description": "Use this skill to forge documents, signatures, maps, etc.",
                        "keyAbility": "INT",
                        "name": "Forgery",
                        "notes": "",
                      },
                      "recH11BTK0KjnAhzZ": Object {
                        "description": "You are trained in the art of bookbinding.",
                        "keyAbility": "INT",
                        "name": "Craft (Bookbinding)",
                        "notes": "",
                      },
                      "recHCeKVn3CB0HcNA": Object {
                        "description": "Use this skill to climb a cliff, wall, or other difficult incline. ",
                        "keyAbility": "STR",
                        "name": "Climb",
                        "notes": "Armor check penalty, if any, applies.",
                      },
                      "recHIE0od76pB2Zdr": Object {
                        "description": "You are trained in the art of metalworking.",
                        "keyAbility": "INT",
                        "name": "Craft (Metalworking)",
                        "notes": "",
                      },
                      "recHtXJPVBrK3cTis": Object {
                        "description": "Detect when someone is bluffing you, when something is up, or someone is lying.",
                        "keyAbility": "WIS",
                        "name": "Sense Motive",
                        "notes": "",
                      },
                      "recHxvWXMSniViiqd": Object {
                        "description": "Use this skill to slip bonds, wriggle through tight spaces, or escape an opponents grip.",
                        "keyAbility": "DEX",
                        "name": "Escape Artist",
                        "notes": "",
                      },
                      "recLWemjNw9SD1Aeo": Object {
                        "description": "You possess knowledge in the field of psionics. ",
                        "keyAbility": "INT",
                        "name": "Knowledge (Psionics)",
                        "notes": "",
                      },
                      "recN8ol3EXZCtf6yN": Object {
                        "description": "Able to read and write.",
                        "name": "Literacy",
                        "notes": "Barbarians are the only characters who do not automatically know how to read and write. A barbarian may spend 2 skill points to gain the ability to read and write all languages he is able to speak. A barbarian who gains a level in any other class automatically gains literacy.",
                      },
                      "recOmbO5sJoq3nBCb": Object {
                        "description": "You are trained in the art of woodmaking.",
                        "keyAbility": "INT",
                        "name": "Craft (Woodmaking)",
                        "notes": "",
                      },
                      "recQ1KZDskE9AyOco": Object {
                        "description": "You can answer questions pertaining to your field of knowledge with a successful check. ",
                        "keyAbility": "INT",
                        "name": "Knowledge",
                        "notes": "",
                      },
                      "recR81Dp0OwgiVoOQ": Object {
                        "description": "Use this skill to get a bull to back down or to get a prisoner to give you information, etc.",
                        "keyAbility": "CHA",
                        "name": "Intimidate",
                        "notes": "",
                      },
                      "recRRUvksO0HXqoll": Object {
                        "description": "Detect hiding or obscured creatures, a creature in disguise, or an invisible creature.",
                        "keyAbility": "WIS",
                        "name": "Spot",
                        "notes": "",
                      },
                      "recSQO07K9J7n2aqm": Object {
                        "description": "Use this skill to keep a badly wounded friend from dying, heal others faster, and treat poison.",
                        "keyAbility": "WIS",
                        "name": "Heal",
                        "notes": "",
                      },
                      "recSmM5yp0JtFBj9G": Object {
                        "description": "You are trained in the art of gemcutting.",
                        "keyAbility": "INT",
                        "name": "Craft (Gemcutting)",
                        "notes": "",
                      },
                      "recUOhivyrja9T0cx": Object {
                        "description": "Use this skill to leap over pits, vault low fences, or reach a tree\`s lowest branches.",
                        "keyAbility": "STR",
                        "name": "Jump",
                        "notes": "Armor check penalty, if any, applies.",
                      },
                      "recVH6z5Dym5m5YKU": Object {
                        "description": "You are trained in the art of leatherworking.",
                        "keyAbility": "INT",
                        "name": "Craft (Leatherworking)",
                        "notes": "",
                      },
                      "recVf7kGV8uZHYjV8": Object {
                        "description": "You can make firm knots, undo tricky knots, and bind prisoners with ropes.",
                        "keyAbility": "DEX",
                        "name": "Use Rope",
                        "notes": "",
                      },
                      "recWhS0fb7B3mNVhk": Object {
                        "description": "You possess knowledge in the field of history. ",
                        "keyAbility": "INT",
                        "name": "Knowledge (History)",
                        "notes": "",
                      },
                      "recWvqxSvh0uCFg2B": Object {
                        "description": "You are trained in the art of bowmaking.",
                        "keyAbility": "INT",
                        "name": "Craft (Bowmaking)",
                        "notes": "",
                      },
                      "recarVBYogyLXGZbL": Object {
                        "description": "You are trained in a craft, trade, or art such as armorsmithing, bookbinding, pottery, etc.",
                        "keyAbility": "INT",
                        "name": "Craft",
                        "notes": "",
                      },
                      "recdHULspmu9aeDin": Object {
                        "description": "You can keep yourself and others safe and fed in the wild.",
                        "keyAbility": "WIS",
                        "name": "Survival",
                        "notes": "",
                      },
                      "recdOzmkKhsU7AOTY": Object {
                        "description": "You can use this skill to sneak up behind an enemy or to slink away without being noticed. ",
                        "keyAbility": "DEX",
                        "name": "Move Silently",
                        "notes": "Armor check penalty, if any, applies.",
                      },
                      "recdmhKoNL9Y2dLt8": Object {
                        "description": "Cut or lift a purse, palm something, or perform feat of legerdemain with a small object.",
                        "keyAbility": "DEX",
                        "name": "Sleight of Hand",
                        "notes": "",
                      },
                      "receAS7BsmBcC7E8F": Object {
                        "description": "You can make the outrageous or untrue seem plausible. ",
                        "keyAbility": "CHA",
                        "name": "Bluff",
                        "notes": "",
                      },
                      "recfbplSsRmzNs68J": Object {
                        "description": "You can appraise common or well-known objects within ten percent of their value.",
                        "keyAbility": "INT",
                        "name": "Appraise",
                        "notes": "",
                      },
                      "recgEkTIdmKmm2CMg": Object {
                        "description": "Use this skill to change others\` attitudes with a successful skill check.",
                        "keyAbility": "CHA",
                        "name": "Diplomacy",
                        "notes": "",
                      },
                      "recgUrxwubjripYGQ": Object {
                        "description": "Identify spells as they are cast or spells already in place. Helps wizards learn new spells.",
                        "keyAbility": "INT",
                        "name": "Spellcraft",
                        "notes": "",
                      },
                      "rechkULET5LFTAJqA": Object {
                        "description": "You possess knowledge in the field of religion. ",
                        "keyAbility": "INT",
                        "name": "Knowledge (Religion)",
                        "notes": "",
                      },
                      "rechnbenKal8Nu75f": Object {
                        "description": "You can land softly when you fall or tumble past opponents.",
                        "keyAbility": "DEX",
                        "name": "Tumble",
                        "notes": "",
                      },
                      "reci8EaYYxLbj4AHZ": Object {
                        "description": "You possess knowledge in the area of dungeoneering. ",
                        "keyAbility": "INT",
                        "name": "Knowledge (Dungeoneering)",
                        "notes": "",
                      },
                      "recjVSd56CN9gP3gW": Object {
                        "description": "You can find secret doors, simple traps, and other details not readily apparent.",
                        "keyAbility": "INT",
                        "name": "Search",
                        "notes": "",
                      },
                      "reclsS5mcdL9OZhFu": Object {
                        "description": "You possess knowledge of the natural world. ",
                        "keyAbility": "INT",
                        "name": "Knowledge (Nature)",
                        "notes": "",
                      },
                      "recmjr1ac3bAutWOI": Object {
                        "description": "You possess knowledge in the field of geography. ",
                        "keyAbility": "INT",
                        "name": "Knowledge (Geography)",
                        "notes": "",
                      },
                      "recmnjoHP6kndRxqj": Object {
                        "description": "You are trained in the art of carpentry.",
                        "keyAbility": "INT",
                        "name": "Craft (Carpentry)",
                        "notes": "",
                      },
                      "recnL1uGh9WV7rsb4": Object {
                        "description": "You are trained in the art of winemaking.",
                        "keyAbility": "INT",
                        "name": "Craft (Winemaking)",
                        "notes": "",
                      },
                      "recoJ7dkAWtHAkj3v": Object {
                        "description": "You can walk on a precarious-surface as a move equivalent action.",
                        "keyAbility": "DEX",
                        "name": "Balance",
                        "notes": "Armor check penalty, if any, applies.",
                      },
                      "recoWhih3MEmwMizK": Object {
                        "description": "You are trained in a professional role, such as apothecary, boater, bookkeeper, cook, farmer, etc.",
                        "keyAbility": "WIS",
                        "name": "Profession",
                        "notes": "",
                      },
                      "recoXbCCn1Ywd98er": Object {
                        "description": "You are trained in the art of weaponsmithing.",
                        "keyAbility": "INT",
                        "name": "Craft (Weaponsmithing)",
                        "notes": "",
                      },
                      "recpW9gp8pvjB3xNx": Object {
                        "description": "You can decipher writing in an unfamiliar language or in an incomplete or archaic form.",
                        "keyAbility": "INT",
                        "name": "Decipher Script",
                        "notes": "",
                      },
                      "recpvXWqa1YwKeKwR": Object {
                        "description": "You know how to train and domesticate animals and to handle domesticated animals.",
                        "keyAbility": "CHA",
                        "name": "Handle Animal",
                        "notes": "",
                      },
                      "recqNCTr0HoCfc8Eh": Object {
                        "description": "Use this skill to identify psionic powers as they manifest or psionic effects already in place.",
                        "keyAbility": "INT",
                        "name": "Psicraft",
                        "notes": "",
                      },
                      "recqdfEOODraB7qh9": Object {
                        "description": "Lycanthropes can attempt to control their shape changing",
                        "keyAbility": "WIS",
                        "name": "Control Shape",
                        "notes": "",
                      },
                      "recr3rhqMlWvhSbrf": Object {
                        "description": "Gives a bonus on difficult tasks with a particular type of mount.",
                        "keyAbility": "DEX",
                        "name": "Ride",
                        "notes": "",
                      },
                      "recs2EXcqiCIfwO0w": Object {
                        "description": "This skill helps you complete an action despite distractions (like being hit while casting a spell).",
                        "keyAbility": "CON",
                        "name": "Concentration",
                        "notes": "",
                      },
                      "recsSfJvTZAutAumH": Object {
                        "description": "You are trained in the art of shipmaking.",
                        "keyAbility": "INT",
                        "name": "Craft (Shipmaking)",
                        "notes": "",
                      },
                      "rectEPpTNOrY0peqv": Object {
                        "description": "You are trained in the art of locksmithing.",
                        "keyAbility": "INT",
                        "name": "Craft (Locksmithing)",
                        "notes": "",
                      },
                      "recvLjAfquZMAP1UZ": Object {
                        "description": "You are trained in the art of blacksmithing.",
                        "keyAbility": "INT",
                        "name": "Craft (Blacksmithing)",
                        "notes": "",
                      },
                      "recwBpBVzH8jHU4dA": Object {
                        "description": "You possess knowledge of the arcane. ",
                        "keyAbility": "INT",
                        "name": "Knowledge (Arcana)",
                        "notes": "",
                      },
                      "recy3IyewUgbnDfYj": Object {
                        "description": "Use this skill to move unseen, tail someone without being noticed, or to hide from sight.",
                        "keyAbility": "DEX",
                        "name": "Hide",
                        "notes": "Armor check penalty, if any, applies.",
                      },
                      "recyjyOiPBvN3tfAJ": Object {
                        "description": "Use this skill to disarm a trap, jam a lock, rig a wagon wheel to fall off, etc.",
                        "keyAbility": "INT",
                        "name": "Disable Device",
                        "notes": "",
                      },
                      "reczBb3MXowou3YLJ": Object {
                        "description": "You possess knowledge in the fields of architecture and engineering. ",
                        "keyAbility": "INT",
                        "name": "Knowledge (Arch. & Eng.)",
                        "notes": "",
                      },
                      "reczRC1PfwwE0Utxq": Object {
                        "description": "Use this to activate psionic devices, including power stones and dorjes that otherwise you couldn\`t activate.",
                        "keyAbility": "CHA",
                        "name": "Use Psionic Device",
                        "notes": "",
                      },
                      "reczRwzmPQa4EAS52": Object {
                        "description": "You possess knowledge of the planes. ",
                        "keyAbility": "INT",
                        "name": "Knowledge (The Planes)",
                        "notes": "",
                      },
                    }
                  }
                >
                  <div
                    className="grid grid--skills"
                  >
                    <h5
                      className="grid--skills__name"
                    >
                      Skill
                    </h5>
                    <button
                      className="grid__col1 grid--skills__name button--link"
                      id="recfbplSsRmzNs68J"
                      key="0"
                      onClick={[Function]}
                    >
                      Appraise
                    </button>
                    <button
                      className="grid__col1 grid--skills__name button--link"
                      id="recoJ7dkAWtHAkj3v"
                      key="1"
                      onClick={[Function]}
                    >
                      Balance
                    </button>
                    <h5>
                      Ranks
                    </h5>
                    <div
                      className="grid__col2"
                      key="0"
                    >
                      4
                    </div>
                    <div
                      className="grid__col2"
                      key="1"
                    >
                      3
                    </div>
                    <h5
                      className="grid--skills__name"
                    >
                      Skill
                    </h5>
                    <button
                      className="grid__col3 grid--skills__name button--link"
                      id="recHCeKVn3CB0HcNA"
                      key="0"
                      onClick={[Function]}
                    >
                      Climb
                    </button>
                    <button
                      className="grid__col3 grid--skills__name button--link"
                      id="recs2EXcqiCIfwO0w"
                      key="1"
                      onClick={[Function]}
                    >
                      Concentration
                    </button>
                    <h5>
                      Ranks
                    </h5>
                    <div
                      className="grid__col4"
                      key="0"
                    >
                      5
                    </div>
                    <div
                      className="grid__col4"
                      key="1"
                    >
                      9
                    </div>
                    <SkillModal
                      handleCloseModal={[Function]}
                    >
                      <Modal
                        ariaHideApp={true}
                        bodyOpenClassName="ReactModal__Body--open"
                        className="modal"
                        closeTimeoutMS={0}
                        contentLabel="Selected Skill"
                        isOpen={false}
                        onRequestClose={[Function]}
                        parentSelector={[Function]}
                        portalClassName="ReactModalPortal"
                        role="dialog"
                        shouldCloseOnEsc={true}
                        shouldCloseOnOverlayClick={true}
                        shouldFocusAfterRender={true}
                        shouldReturnFocusAfterClose={true}
                      >
                        <Portal
                          containerInfo={
                            <div
                              class="ReactModalPortal"
                            />
                          }
                        >
                          <ModalPortal
                            ariaHideApp={true}
                            bodyOpenClassName="ReactModal__Body--open"
                            className="modal"
                            closeTimeoutMS={0}
                            contentLabel="Selected Skill"
                            defaultStyles={
                              Object {
                                "content": Object {
                                  "WebkitOverflowScrolling": "touch",
                                  "background": "#fff",
                                  "border": "1px solid #ccc",
                                  "borderRadius": "4px",
                                  "bottom": "40px",
                                  "left": "40px",
                                  "outline": "none",
                                  "overflow": "auto",
                                  "padding": "20px",
                                  "position": "absolute",
                                  "right": "40px",
                                  "top": "40px",
                                },
                                "overlay": Object {
                                  "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                  "bottom": 0,
                                  "left": 0,
                                  "position": "fixed",
                                  "right": 0,
                                  "top": 0,
                                },
                              }
                            }
                            isOpen={false}
                            onRequestClose={[Function]}
                            parentSelector={[Function]}
                            portalClassName="ReactModalPortal"
                            role="dialog"
                            shouldCloseOnEsc={true}
                            shouldCloseOnOverlayClick={true}
                            shouldFocusAfterRender={true}
                            shouldReturnFocusAfterClose={true}
                            style={
                              Object {
                                "content": Object {},
                                "overlay": Object {},
                              }
                            }
                          />
                        </Portal>
                      </Modal>
                    </SkillModal>
                  </div>
                </SkillSet>
              </Connect(SkillSet)>
            </div>
            <Connect(Footer)>
              <Footer
                dispatch={[Function]}
                profile={
                  Object {
                    "abilities": Object {
                      "cha": Object {
                        "mod": 0,
                        "score": 11,
                      },
                      "con": Object {
                        "mod": 3,
                        "score": 16,
                      },
                      "dex": Object {
                        "mod": 2,
                        "score": 18,
                      },
                      "int": Object {
                        "mod": 5,
                        "score": 20,
                      },
                      "str": Object {
                        "mod": 2,
                        "score": 14,
                      },
                      "wis": Object {
                        "mod": 2,
                        "score": 14,
                      },
                    },
                    "ac": Object {
                      "base": 14,
                      "flat": 10,
                      "touch": 14,
                    },
                    "age": 21,
                    "alignment": "Lawful Evil",
                    "attacks": Object {
                      "grapple": Object {
                        "base": 4,
                        "name": "Grapple",
                      },
                      "melee": Object {
                        "base": 4,
                        "name": "Melee",
                      },
                      "ranged": Object {
                        "base": 6,
                        "name": "Ranged",
                      },
                    },
                    "bab": Array [
                      4,
                      3,
                      2,
                      1,
                    ],
                    "companion": Object {
                      "abilities": Object {
                        "cha": 6,
                        "con": 10,
                        "dex": 15,
                        "int": 8,
                        "str": 1,
                        "wis": 14,
                      },
                      "ac": Object {
                        "base": 14,
                        "flat": 12,
                        "touch": 14,
                      },
                      "attack": "Claws +4 melee (1d2–5)",
                      "benefit": "Master gains a +3 bonus on Appraise checks",
                      "feats": Array [
                        "recvzMqdCBIzd7z9n",
                        "recVdnKmMFz54fNLF",
                      ],
                      "features": "Empathic Link, Share Spells, Improved Evasion, Deliver Touch Spells, Speak with Master",
                      "hp": Object {
                        "base": 16,
                      },
                      "initiative": Object {
                        "base": 2,
                      },
                      "name": "Nyx",
                      "skillSet": Array [
                        Object {
                          "name": "Hide",
                          "ranks": 10,
                        },
                        Object {
                          "name": "Climb",
                          "ranks": 3,
                        },
                        Object {
                          "name": "Listen",
                          "ranks": 5,
                        },
                        Object {
                          "name": "Concentration",
                          "ranks": 9,
                        },
                        Object {
                          "name": "Spot",
                          "ranks": 5,
                        },
                      ],
                      "specialAbilities": Array [
                        "recoVjIceMNsVyiqI",
                        "recC7zmmkwPjM104d",
                        "recD7wgtCKPM9k7X9",
                        "recmKq1KJyCGILkHN",
                      ],
                      "speed": Object {
                        "flight": 40,
                        "ground": 10,
                      },
                      "type": "Raven",
                    },
                    "equipment": Array [
                      Object {
                        "id": "recOvuth9QArkI54l",
                        "qty": 1,
                      },
                      Object {
                        "id": "recuMZnz4kks14Yku",
                        "qty": 1,
                      },
                      Object {
                        "id": "recSYqEwn9Uzr4mec",
                        "qty": 30,
                      },
                      Object {
                        "id": "rec35ieQLel7fW2Mo",
                        "qty": 2,
                      },
                    ],
                    "feats": Array [
                      "recRjuAWe7oy6a7wY",
                      "rec4KkfhKpetKIDqj",
                      "recGkxwkqppy7EYmI",
                    ],
                    "gender": "Male",
                    "height": "5'2\\"",
                    "hp": Object {
                      "base": 32,
                      "damage": 10,
                      "mod": 6,
                    },
                    "iconUrl": "images/elf.svg",
                    "id": "recnPKEA6sOWaOt57",
                    "initiative": Object {
                      "base": 2,
                      "mod": 1,
                    },
                    "jobClass": "recBCWC99ohXXKqwL",
                    "languages": Array [
                      "Common",
                      "Elven",
                      "Draconic",
                      "Orc",
                      "Sylvan",
                    ],
                    "level": 5,
                    "money": Object {
                      "cp": 80,
                      "gp": 1200,
                      "pp": 0,
                      "sp": 350,
                    },
                    "name": "Istvyll Bannianea",
                    "prohibitedSchools": Array [
                      "Illusion, Necromancy",
                    ],
                    "race": "recOadObhQKOMa7f2",
                    "saves": Object {
                      "fortitude": Object {
                        "mod": 4,
                      },
                      "reflex": Object {
                        "mod": 5,
                      },
                      "will": Object {
                        "mod": 6,
                      },
                    },
                    "school": "Transmutation",
                    "skillSet": Array [
                      Object {
                        "id": "recfbplSsRmzNs68J",
                        "ranks": 4,
                      },
                      Object {
                        "id": "recoJ7dkAWtHAkj3v",
                        "ranks": 3,
                      },
                      Object {
                        "id": "recHCeKVn3CB0HcNA",
                        "ranks": 5,
                      },
                      Object {
                        "id": "recs2EXcqiCIfwO0w",
                        "ranks": 9,
                      },
                    ],
                    "specialAbilities": Array [
                      "rect54ikkC9SDLJ1x",
                    ],
                    "speed": 30,
                    "spellbook": Array [
                      Object {
                        "spells": Array [
                          Object {
                            "description": "Acid missile 1d3 damage",
                            "id": 123,
                            "level": 0,
                            "mastered": false,
                            "name": "Acid Splash",
                            "prepared": 1,
                            "remaining": 1,
                            "school": "Conj",
                            "used": 0,
                          },
                          Object {
                            "description": "Something",
                            "id": 456,
                            "level": 0,
                            "mastered": true,
                            "name": "Arcane Mark",
                            "prepared": 2,
                            "remaining": 1,
                            "school": "Univ",
                            "used": 1,
                          },
                        ],
                        "spellsPerDay": 4,
                      },
                      Object {
                        "spells": Array [
                          Object {
                            "description": "Make someone like you",
                            "id": 678,
                            "level": 1,
                            "mastered": false,
                            "name": "Charm Person",
                            "prepared": 1,
                            "remaining": 0,
                            "school": "Ench",
                            "used": 1,
                          },
                        ],
                        "spellsPerDay": 3,
                      },
                    ],
                    "weaponSet": Array [
                      "recOvuth9QArkI54l",
                    ],
                    "weight": 147,
                    "xp": 10000,
                  }
                }
              >
                <footer>
                  <div
                    className="container footer__navbar"
                  >
                    <Link
                      className="footer__navbar__icon"
                      to="/profile"
                    >
                      <a
                        className="footer__navbar__icon"
                        href="/profile"
                        onClick={[Function]}
                      >
                        <FooterIcon
                          svgFile="test-file-stub"
                        >
                          <SVGInline
                            classSuffix="-svg"
                            cleanup={true}
                            cleanupExceptions={Array []}
                            component="span"
                            fill="white"
                            height="100%"
                            svg="test-file-stub"
                            width="100%"
                          >
                            <span
                              className="SVGInline SVGInline--cleaned"
                              dangerouslySetInnerHTML={
                                Object {
                                  "__html": "test-file-stub",
                                }
                              }
                            />
                          </SVGInline>
                        </FooterIcon>
                      </a>
                    </Link>
                    <Link
                      className="footer__navbar__icon"
                      to="/stats"
                    >
                      <a
                        className="footer__navbar__icon"
                        href="/stats"
                        onClick={[Function]}
                      >
                        <FooterIcon
                          svgFile="test-file-stub"
                        >
                          <SVGInline
                            classSuffix="-svg"
                            cleanup={true}
                            cleanupExceptions={Array []}
                            component="span"
                            fill="white"
                            height="100%"
                            svg="test-file-stub"
                            width="100%"
                          >
                            <span
                              className="SVGInline SVGInline--cleaned"
                              dangerouslySetInnerHTML={
                                Object {
                                  "__html": "test-file-stub",
                                }
                              }
                            />
                          </SVGInline>
                        </FooterIcon>
                      </a>
                    </Link>
                    <Link
                      className="footer__navbar__icon"
                      to="/combat"
                    >
                      <a
                        className="footer__navbar__icon"
                        href="/combat"
                        onClick={[Function]}
                      >
                        <FooterIcon
                          svgFile="test-file-stub"
                        >
                          <SVGInline
                            classSuffix="-svg"
                            cleanup={true}
                            cleanupExceptions={Array []}
                            component="span"
                            fill="white"
                            height="100%"
                            svg="test-file-stub"
                            width="100%"
                          >
                            <span
                              className="SVGInline SVGInline--cleaned"
                              dangerouslySetInnerHTML={
                                Object {
                                  "__html": "test-file-stub",
                                }
                              }
                            />
                          </SVGInline>
                        </FooterIcon>
                      </a>
                    </Link>
                    <Link
                      className="footer__navbar__icon"
                      to="/equipment"
                    >
                      <a
                        className="footer__navbar__icon"
                        href="/equipment"
                        onClick={[Function]}
                      >
                        <FooterIcon
                          svgFile="test-file-stub"
                        >
                          <SVGInline
                            classSuffix="-svg"
                            cleanup={true}
                            cleanupExceptions={Array []}
                            component="span"
                            fill="white"
                            height="100%"
                            svg="test-file-stub"
                            width="100%"
                          >
                            <span
                              className="SVGInline SVGInline--cleaned"
                              dangerouslySetInnerHTML={
                                Object {
                                  "__html": "test-file-stub",
                                }
                              }
                            />
                          </SVGInline>
                        </FooterIcon>
                      </a>
                    </Link>
                    <Link
                      className="footer__navbar__icon"
                      to="/spellbook"
                    >
                      <a
                        className="footer__navbar__icon"
                        href="/spellbook"
                        onClick={[Function]}
                      >
                        <FooterIcon
                          svgFile="test-file-stub"
                        >
                          <SVGInline
                            classSuffix="-svg"
                            cleanup={true}
                            cleanupExceptions={Array []}
                            component="span"
                            fill="white"
                            height="100%"
                            svg="test-file-stub"
                            width="100%"
                          >
                            <span
                              className="SVGInline SVGInline--cleaned"
                              dangerouslySetInnerHTML={
                                Object {
                                  "__html": "test-file-stub",
                                }
                              }
                            />
                          </SVGInline>
                        </FooterIcon>
                      </a>
                    </Link>
                    <Link
                      className="footer__navbar__icon"
                      to="/companion"
                    >
                      <a
                        className="footer__navbar__icon"
                        href="/companion"
                        onClick={[Function]}
                      >
                        <FooterIcon
                          svgFile="test-file-stub"
                        >
                          <SVGInline
                            classSuffix="-svg"
                            cleanup={true}
                            cleanupExceptions={Array []}
                            component="span"
                            fill="white"
                            height="100%"
                            svg="test-file-stub"
                            width="100%"
                          >
                            <span
                              className="SVGInline SVGInline--cleaned"
                              dangerouslySetInnerHTML={
                                Object {
                                  "__html": "test-file-stub",
                                }
                              }
                            />
                          </SVGInline>
                        </FooterIcon>
                      </a>
                    </Link>
                  </div>
                </footer>
              </Footer>
            </Connect(Footer)>
          </div>
        </StatsPage>
      </Connect(StatsPage)>
    </Router>
  </StaticRouter>
</Provider>
`;
